//This code was generated by a tool.
//Changes to this file will be lost if the code is regenerated.
// See the blog post here for help on using the generated code: http://erikej.blogspot.dk/2014/10/database-first-with-sqlite-in-universal.html
using CIS494CourseProject.Model;
using SQLite;
using System;
using System.Diagnostics;

namespace CIS494CourseProject
{
    public class SQLiteDb
    {
        static string _path;
        //public static SQLiteConnection db = new SQLiteConnection(_path);

        public SQLiteDb(string path)
        {
            _path = path;
        }

        public void Create()
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                db.CreateTable<ConcernLevelData>();
                db.CreateTable<FoodData>();
                db.CreateTable<FoodTransaction>();
                db.CreateTable<LoginData>();
                db.CreateTable<UserFoodTrackingData>();
            }
        }

        public static long GetUserID(string username)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var logins = db.Table<LoginData>();
                LoginData user = logins.Where(un => un.UserName == username).FirstOrDefault();
                return user.UserID;
            }
        }

        public static void CreateUser(LoginData obj)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                
                Debug.WriteLine("Creation of user " + obj.UserName + " successful? " + db.Insert(obj));
            }
        }

        public static int LoginUser(LoginData obj)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var logins = db.Table<LoginData>();

                LoginData user = logins.Where(uid => uid.UserID == obj.UserID).FirstOrDefault();

                if (user != null)
                {
                    Globals.UserID = user.UserID;
                    Globals.isLoggedIn = true;
                    return 1;
                }
                return 0;
            }


        }
        //[Table ("ConcernLevelData")]
        public partial class ConcernLevelData
        {
            [PrimaryKey, AutoIncrement]
            //[Unique(Name = "sqlite_autoindex_ConcernLevelData_1", Order = 0)]
            public Int64 ConcernID { get; set; }

            [NotNull]
            public String ConcernDetails { get; set; }

        }

        public partial class FoodData
        {
            [PrimaryKey, AutoIncrement]
            //[Unique(Name = "sqlite_autoindex_FoodData_1", Order = 0)]
            public Int64 FoodID { get; set; }

            [NotNull]
            public String FoodName { get; set; }

        }

        public partial class FoodTransaction
        {
            [PrimaryKey, AutoIncrement]
            //[Unique(Name = "sqlite_autoindex_FoodTransaction_1", Order = 0)]
            public Int64 FoodTransID { get; set; }

            [NotNull]
            public DateTime DateAndTime { get; set; }

            [NotNull]
            public Int64 UserID { get; set; }

            public String ReationDetails { get; set; }

            public Int64? ConcernLevelID { get; set; }

        }

        //[Table ("LoginData")]
        public partial class LoginData
        {
            //public LoginData(string username, string password)
            //{
            //    this.UserName = username;
            //    this.Password = password;
            //}
            [PrimaryKey, AutoIncrement]
            //[Unique(Name = "sqlite_autoindex_LoginData_1", Order = 0)]
            public Int64 UserID { get; set; }

            //[Unique(Name = "sqlite_autoindex_LoginData_2", Order = 0)]
            [NotNull]
            public string UserName { get; set; }

            [NotNull]
            public string Password { get; set; }

        }

        public partial class UserFoodTrackingData
        {
            [PrimaryKey, AutoIncrement]
            //[Unique(Name = "sqlite_autoindex_UserFoodTrackingData_1", Order = 0)]
            public Int64 TrackingID { get; set; }

            [NotNull]
            public Int64 UserID { get; set; }

            [NotNull]
            public Int64 FoodID { get; set; }

            [NotNull]
            public Int64 ConcernLevelID { get; set; }

        }

    }
}
