//This code was generated by a tool.
//Changes to this file will be lost if the code is regenerated.
// See the blog post here for help on using the generated code: http://erikej.blogspot.dk/2014/10/database-first-with-sqlite-in-universal.html
using CIS494CourseProject.Model;
using SQLite;
using System;
using System.Collections.Generic;
using System.Diagnostics;

namespace CIS494CourseProject
{
    public partial class SQLiteDb
    {

        public void ClearFoodData()
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                db.DropTable<FoodData>();
                db.CreateTable<FoodData>();
            }
        }

        public void AddFoodData(FoodData food)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var foods = db.Table<FoodData>();

                if (foods.Where(fd => fd.FoodName == food.FoodName).FirstOrDefault() == null)
                { db.Insert(food); }
            }
        }

        public List<string> GetFoodNames()
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                List<string> list = new List<string>();
                var foods = db.Table<FoodData>();

                foreach (var f in foods)
                {
                    list.Add(f.FoodName);
                }
                return list;
            }
        }

        public string GetFoodNameFromID(long? id)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var foods = db.Table<FoodData>();

                FoodData fdata = foods.Where(fd => fd.FoodID == id).FirstOrDefault();
                if(fdata != null)
                {
                    return fdata.FoodName;
                }
                else
                {
                    return "";
                }
            }
        }

        public long GetFoodIDFromName(string foodName)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var foods = db.Table<FoodData>();

                FoodData fdata = foods.Where(fd => fd.FoodName == foodName).FirstOrDefault();
                return fdata.FoodID;
            }
            
        }

        public void CreateFoodList()
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var foods = db.Table<FoodData>();
                FoodData food = new FoodData();

                food.FoodName = "Corn";
                AddFoodData(food);

                food.FoodName = "Wheat";
                AddFoodData(food);

                food.FoodName = "Rye";
                AddFoodData(food);

                food.FoodName = "Barley";
                AddFoodData(food);

                food.FoodName = "Oats";
                AddFoodData(food);

                food.FoodName = "Shellfish";
                AddFoodData(food);

                food.FoodName = "Eggs";
                AddFoodData(food);

                food.FoodName = "Fish";
                AddFoodData(food);

                food.FoodName = "Peanuts";
                AddFoodData(food);

                food.FoodName = "Soybeans";
                AddFoodData(food);

                food.FoodName = "Cow Milk";
                AddFoodData(food);

                food.FoodName = "Goat Milk";
                AddFoodData(food);

                food.FoodName = "Almonds";
                AddFoodData(food);

                food.FoodName = "Hazelnuts";
                AddFoodData(food);

                food.FoodName = "Walnuts";
                AddFoodData(food);

                food.FoodName = "Cashews";
                AddFoodData(food);

                food.FoodName = "Pecans";
                AddFoodData(food);

                food.FoodName = "Brazil Nuts";
                AddFoodData(food);

                food.FoodName = "Pistachio Nuts";
                AddFoodData(food);

                food.FoodName = "Macadamia Nuts";
                AddFoodData(food);

                food.FoodName = "Celery";
                AddFoodData(food);

                food.FoodName = "Mustard";
                AddFoodData(food);

                food.FoodName = "Sesame";
                AddFoodData(food);

                food.FoodName = "Sulphites";
                AddFoodData(food);

                food.FoodName = "Mollusks";
                AddFoodData(food);

                food.FoodName = "Banana";
                AddFoodData(food);

                food.FoodName = "Chamomile";
                AddFoodData(food);

                foreach (var fd in foods)
                {
                    Debug.WriteLine("- " + fd.FoodID.ToString() + " -> " + fd.FoodName.ToString());
                }
                
            }
        }


        
    }
}
