//This code was generated by a tool.
//Changes to this file will be lost if the code is regenerated.
// See the blog post here for help on using the generated code: http://erikej.blogspot.dk/2014/10/database-first-with-sqlite-in-universal.html
using CIS494CourseProject.Model;
using SQLite;
using System;
using System.Collections.Generic;
using System.Diagnostics;

namespace CIS494CourseProject
{
    public partial class SQLiteDb
    {

        /// <summary>
        /// Clears All LoginData - *IRREVERSIBLE*
        /// </summary>
        public void ClearLoginDatabase()
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                db.DropTable<LoginData>();
                db.CreateTable<LoginData>();
            }
        }

        public string GetUserName(long? userID)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var users = db.Table<LoginData>();
                var user = users.Where(u => u.UserID == userID).FirstOrDefault();

                if (user != null)
                {
                    return user.UserName;
                }

            }
            return null;
        }

        /// <summary>
        /// Returns userID from given username.
        /// </summary>
        /// <param name="username"></param>
        /// <returns></returns>
        public static long GetUserID(string username)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var logins = db.Table<LoginData>();
                LoginData user = logins.Where(un => un.UserName == username).FirstOrDefault();
                return user.UserID;
            }
        }

        /// <summary>
        /// Adds the obj to the loginData table to create a userName and Password.
        /// </summary>
        /// <param name="obj"></param>
        public static void CreateUser(LoginData obj)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                Debug.WriteLine("Creation Username = " + obj.UserName + " Creation Password = " + obj.Password + " Email = " + obj.Email);
                Debug.WriteLine("Creation of user " + obj.UserName + " successful? " + db.Insert(obj));
            }
        }

        /// <summary>
        /// Attempts to login obj using obj's username and password.
        /// </summary>
        /// <param name="obj"></param>
        /// <returns></returns>
        public static int LoginUser(LoginData obj)
        {
            using (SQLiteConnection db = new SQLiteConnection(_path))
            {
                var logins = db.Table<LoginData>();

                LoginData user = logins.Where(uid => uid.UserName == obj.UserName).FirstOrDefault();

                if (user != null)
                {
                    Globals.UserID = user.UserID;
                    if (user.Password == obj.Password)
                    {
                        Globals.isLoggedIn = true;

                        return 1;
                    }
                }
                return 0;
            }


        }
    }
}
